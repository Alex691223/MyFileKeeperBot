from aiogram import Router, types, F
from aiogram.filters import Command
from utils.auth import is_activated, activate_user
from utils.keygen import check_key
from static.agreement import AGREEMENT_RU, AGREEMENT_DE

router = Router()

@router.message(Command("start"))
async def start_handler(msg: types.Message):
    if not is_activated(msg.from_user.id):
        await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Sprache w√§hlen:", reply_markup=lang_buttons())
    else:
        await msg.answer("–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /panel –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")

def lang_buttons():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"), types.KeyboardButton("üá©üá™ Deutsch"))
    return kb

@router.message(F.text.in_(["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá©üá™ Deutsch"]))
async def agreement_handler(msg: types.Message):
    lang = "ru" if "–†—É—Å—Å–∫–∏–π" in msg.text else "de"
    agreement = AGREEMENT_RU if lang == "ru" else AGREEMENT_DE
    await msg.answer(agreement)
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:")

@router.message(F.text.regexp(r"^[A-Z0-9]{6,}$"))
async def key_handler(msg: types.Message):
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    if is_activated(msg.from_user.id):
        await msg.answer("–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    key = msg.text.strip().upper()
    if check_key(key, msg.from_user.id):
        builder = InlineKeyboardBuilder()
        builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç", url=f"https://t.me/{(await msg.bot.me()).username}?startgroup=true")
        await msg.answer("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!", reply_markup=builder.as_markup())
    else:
        await msg.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á.")
