from aiogram import Router, types
from aiogram.filters import Command
from utils.auth import get_user_role
from aiogram.utils.markdown import hlink
from datetime import timedelta

router = Router()

async def get_chat_admin_ids(chat: types.Chat, bot) -> list:
    try:
        members = await bot.get_chat_administrators(chat.id)
        return [m.user.id for m in members]
    except:
        return []

def has_permission(user_id, admin_ids, required_roles):
    role = get_user_role(user_id, chat_admins=admin_ids)
    return role in required_roles

@router.message(Command("ban"))
async def ban(msg: types.Message):
    if msg.chat.type == "private":
        return await msg.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")

    if not msg.reply_to_message:
        return await msg.answer("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    admin_ids = await get_chat_admin_ids(msg.chat, msg.bot)
    if not has_permission(msg.from_user.id, admin_ids, ["moderator", "admin", "superadmin"]):
        return await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        await msg.chat.ban(msg.reply_to_message.from_user.id)
        await msg.answer("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@router.message(Command("unban"))
async def unban(msg: types.Message):
    if msg.chat.type == "private":
        return await msg.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")

    if not msg.reply_to_message:
        return await msg.answer("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    admin_ids = await get_chat_admin_ids(msg.chat, msg.bot)
    if not has_permission(msg.from_user.id, admin_ids, ["moderator", "admin", "superadmin"]):
        return await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        await msg.chat.unban(msg.reply_to_message.from_user.id)
        await msg.answer("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@router.message(Command("kick"))
async def kick(msg: types.Message):
    if msg.chat.type == "private":
        return await msg.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")

    if not msg.reply_to_message:
        return await msg.answer("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    admin_ids = await get_chat_admin_ids(msg.chat, msg.bot)
    if not has_permission(msg.from_user.id, admin_ids, ["moderator", "admin", "superadmin"]):
        return await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        await msg.chat.ban(msg.reply_to_message.from_user.id)
        await msg.chat.unban(msg.reply_to_message.from_user.id)
        await msg.answer("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∏–∫–Ω—É—Ç.")
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@router.message(Command("warn"))
async def warn(msg: types.Message):
    if msg.chat.type == "private":
        return await msg.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")

    if not msg.reply_to_message:
        return await msg.answer("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.")

    admin_ids = await get_chat_admin_ids(msg.chat, msg.bot)
    if not has_permission(msg.from_user.id, admin_ids, ["moderator", "admin", "superadmin"]):
        return await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        warned_user = msg.reply_to_message.from_user
        await msg.answer(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ: {hlink(warned_user.full_name, f'tg://user?id={warned_user.id}')}")
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@router.message(Command("mute"))
async def mute(msg: types.Message):
    if msg.chat.type == "private":
        return await msg.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")

    if not msg.reply_to_message:
        return await msg.answer("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    admin_ids = await get_chat_admin_ids(msg.chat, msg.bot)
    if not has_permission(msg.from_user.id, admin_ids, ["moderator", "admin", "superadmin"]):
        return await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        until_date = types.datetime.datetime.now() + timedelta(minutes=10)
        await msg.chat.restrict(
            user_id=msg.reply_to_message.from_user.id,
            permissions=types.ChatPermissions(can_send_messages=False),
            until_date=until_date
        )
        await msg.answer("üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç.")
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
